/* Reset default settings  */
*,
*::before,
*::after {
    /* changing how PADDING is calculated to make it within a width instead of adding to the total width of something */
    box-sizing: border-box;  
}

/* Setting up some custom properties, update these for your own design */

:root {
    /* font family copied from Google fonts :) */
    --ff-primary: "Source Sans Pro", sans-serif;
    --ff-secondary: "Source Sans Pro", monospace;

    /* font weights */
    --fw-reg: 300;
    --fw-bold: 900;

    /* colors */
    --clr-light: #fff;
    --clr-dark: #303030;
    --clr-accent: #16e0bd;

    /* font sizes - always in REMs - calculated based on MOCK-UP */
    --fs-h1: 3rem;
    --fs-h2: 2.25rem;
    --fs-h3: 1.25rem;
    --fs-body: 1rem;

    /* box shadow */
    /* up/down left/right blur rgba*/
    --bs: .25em .25em .75em rgba(0,0,0,0.25),
          /* another layer to help to increase the realism of the shadows */
          .125em .125em .25em rgba(0,0,0,0.15);
}

/*  generic media query - works well for this design - making fonts bigger for bigger screens */
@media (min-width: 800px) {
    :root {
        /* redefine font sizes - making bigger at large screen sizes - so we don't have to redefine in our actual CSS */
        --fs-h1: 4.5rem;
        --fs-h2: 3.75rem;
        --fs-h3: 1.5rem;
        --fs-body: 1.125rem;
    }
}

/* General styles */

body {
    background: var(--clr-light);
    color: var(--clr-dark);
    margin: 0;
    font-family: var(--ff-primary);
    font-size: var(--fs-body);
    line-height: 1.6;
}

section {
    /* keep things from touching the side of the screen */
    padding: 5em 2em;
}

/* setting up images just so they don't grow bigger and overflow at the side of their parents */
img {
    display: block;
    max-width: 100%;
} 

/* Making strong tag even stronger/bolder (it doesn't work by some reason) */
strong { font-weight: var(--fw-bold) }

/* Everything when it has a FOCUS state (hitting a TAB) is going to get an outline on it */
/* will be applied to our button but it's also gonna apply to other things like links 
so you can see on which element is the FOCUS state (the TAB is on) */
:focus {
    outline: 3px solid var(--clr-accent);
    outline-offset: 3px;
}


/* Buttons */
/* Usually for buttons usually have designs that have more than one button
but in this case we have only one button to style up */

.btn {
    display: inline-block;
    padding: .5em 2.5em;
    background: var(--clr-accent);
    color: var(--clr-dark);
    text-decoration: none;
    /* puts a pointer on the button */
    cursor: pointer;
    font-size: .8rem;
    /* gives uppercase to the text in Button */
    text-transform: uppercase;
    /* helps to spread a letters inside a Button */
    letter-spacing: 2px;
    font-weight: var(--fw-bold);
    /* gets a button bigger when you hover over with .btn:hover property bellow */
    transition: transform .2s ease-in-out;
}

/* gets a button bigger when you hover over with transition property in btn above */
.btn:hover {
    transform: scale(1.1);
}

/* Basic Typography */

h1,
h2,
h3 {
    line-height: 1;
    margin: 0;
}

h1 { font-size: var(--fs-h1); }
h2 { font-size: var(--fs-h2); }
h3 { font-size: var(--fs-h3); }


/* Titles and Subtitles */
/* Do MARGINS and PADDINGS on the text using EMs measurements - relative to font-size */

.section__title {
    margin-bottom: .25em;
}

.section__title--intro {
    font-weight: var(--fw-reg);
}

/* make text in strong to have its own line */
.section__title--intro strong {
    display: block;
}

.section__subtitle {
    margin: 0;
    font-size: var(--fs-h3);
}

.section__subtitle--intro,
.section__subtitle--about {
    background: var(--clr-accent);
    padding: .25em 1em;
    font-family: var(--ff-secondary);
    margin-bottom: 1em;
}

/* Header */
/* hide navigation bar for Mobile */
.nav { display: none; }

/* Intro section */

.intro {
    position: relative;
}

/* giving a box shadow to intro img */
.intro__img {
    box-shadow: var(--bs);
}

/* making the bar to be a size of itself above the picture */
.section__subtitle--intro {
    display: inline-block;
}

/* Good practice for media queries is 300px and up, 600px and up, 900px and up - nice and generic */
@media (min-width: 600px) {
    .intro {
        display: grid;
        width: min-content;
        margin: 0 auto;
        grid-column-gap: 1em;
        grid-template-areas: 
            "img title"
            "img subtitle";
        /* grid-template-columns: for img    for text; */
        grid-template-columns: min-content max-content;
    }
    .intro__img {
        grid-area: img;
        min-width: 250px;
        /* putting green bar behind the img */
        position: relative;
        z-index: 2;
    }
    .section__subtitle--intro {
        /* Stops the green top bar to stretch out up and down */
        align-self: start;
        /* will stretch the green top bar to the right and left - all the way across */
        grid-column: -1 / 1;
        /* will get the green bar to the right of the picture */
        grid-row: 2;
        text-align: right;
        /* will get the green bar across and behind the picture and a bit to the left */
        position: relative;
        left: -1.5em;
        /* will get the green bar's width to match and stretch all the way to the right */
        width: calc(100% + 1.5em);
    }
}


/* My Services section */

.my-services {
    /* good to have a background color and then background image afterwards because
    if the image ever fails for some reason you have a background color instead 
    and still be able to read the white text */
    background-color: var(--clr-dark);
    background-image: url(../img/services-bg.jpg);
    /* to make sure bg image doesn't repeats itself */
    background-size: cover;
    /* make background a bit darker */
    /* background-blend-mode: multiply; */
    color: var(--clr-light);
    text-align: center;
}

.section__title--services {
    color: var(--clr-accent);
    /* position: relative; is because we have pseudo element we want to put on it 
    to create a white line under "What I Do" title */
    position: relative;
}

/* to create a white line under 'What I do' we use pseudo element - .section__title--services::after {} */
.section__title--services::after {
    /* you need to give a 'content' to pseudo element or they will not appear */
    content: '';
    display: block;
    width: 2.5em;
    height: 1px;
    margin: 0.5em auto 1em;
    /* gives the line the same color as 'What I do' text */
    /* background-color: currentColor; */
    /* or give a white color with opacity */
    background-color: var(--clr-light);
    opacity: 0.25;
}

/* the whall service section gets bottom margin BUT the margins disappearin for larger screens because we did margin: 0 auto;
in media query but we fix that by going to media query for service section bellow and change it from margin: 0 auto; to 
margin-left: auto; and margin-right: auto; just so it doesn't overwrite that margin-bottom: 4em; along the way */
.services {
    margin-bottom: 4em;
}

/* will stop things (in this case text) to move(stretch) too much - keeping a decent shape when it is too wide */
.service {
    max-width: 500px;
    /* keep it centered  */
    margin: 0 auto;
}

/* if we want to brake into multiple columns for bigger screens we use media queries
AND 800px seem to work better as a breakpoint for when this would switch over than 900px */
@media (min-width: 800px) {
    .services {
        display: flex;
        /* will stop things to move(stretch) too much - keeping a decent shape when it is too wide */
        max-width: 1000px;
        margin-left: auto;
        margin-right: auto;
    }
    /* will give a space between service blocks (Design + Development, E-Commerce, WorldPress) */
    /* sibling + sibling of the first block (Design + Development) which is ignored by margin-left */
    .service + .service {
        margin-left: 2em;
    }
}


/* About me section */

/* Setting up the size of the section */
.about-me {
    max-width: 1000px;
    margin: 0 auto;
}

.about-me__img {
    box-shadow: var(--bs)
}

/* in this case we use 600px to break the text part and img into 2 columns for wider screen */
@media (min-width: 600px) {
    .about-me {
        display: grid;
        /* columns for main area (1fr) and img (200px) */
        grid-template-columns: 1fr 200px;
        grid-template-areas: 
            "title img"
            "subtitle img"
            "text img";
        /* gap between text column and img */
        grid-column-gap: 2em;
    }

    .section__title--about {
        /* connected with grid-template-areas: in .about-me grid setup */
        grid-area: title;
    }

    .section__subtitle--about {
        grid-column: 1 / -1;
        /* make img go over the subtitle green stripe */
        grid-row: 2;
        position: relative;
        left: -1em;
        /* to make green stripe to stick out on both sides a little bit */
        width: calc(100% + 2em);
        /* giving a text in green stripe a padding of 2em */
        padding-left: 1em;
        /* to make sure that text doesn't go under knees the image
        and gives img a padding of 2em each side and it makes 4em together (from text padding point of view) */
        padding-right: calc(200px + 4em);
    }

    .about-me__img {
        /* connected with grid-template-areas: in .about-me grid setup */
        grid-area: img;
        /* to put img on the top of the green stripe */
        position: relative;
        z-index: 2;
    }
}